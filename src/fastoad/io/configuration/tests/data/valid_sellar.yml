title: Sellar

module_folders:
  - conf_sellar_example
  - d:/path/does/not/exist  # will only trigger a warning

input_file: ../results/inputs.xml
output_file: ../results/outputs.xml

driver: om.ScipyOptimizeDriver(optimizer='SLSQP')

model:
  assembled_jac_type: csc  # Tests the ability to set options for groups
  connections:
    - source: y1
      target: yy1
    - source: y2
      target: yy2
  cycle:
    nonlinear_solver: om.NonlinearBlockGS(iprint=1)
    linear_solver: om.ScipyKrylov()
    disc1:
      id: configuration_test.sellar.disc1
    disc2:
      id: configuration_test.sellar.disc2
  group:
    functions:
      id: configuration_test.sellar.functions
      input_path: "translator.txt"

model_options:
  "*":
    dummy_f_option: 10
    dummy_disc1_option:
      a: 1
      b: 2
    dummy_generic_option: "it works"
    unused_file: "conf_sellar_example/functions.py"
  "cycle.*":
    dummy_generic_option: "it works here also"
    input_file: "__init__.py"

submodels:
  service.function.f: function.f.default
  service.function.g1: function.g1.default
  service.function.g2: function.g2.default

optimization:
  design_variables:
    - name: x
      lower: 0
      upper: 10
    - name: z
      lower: 0
      upper: 10
  constraints:
    - name: g1
      lower: -100
      upper: 0
    - name: g2
      upper: 0
  objective:
    - name: f
      scaler: 1e-1

unknown_section:
  foo: bar